Class Puzzle:
Attributes:
- size: integer grid size
- cages: list of Cage objects
- grid: 2D list representing current grid values (0 for empty)
- _cell_to_cage_map: dictionary mapping cell coordinates to Cage


Methods:
    - __init__(size, cages):
        - Initialize grid with zeros
        - Map each cell to its cage, validating boundaries and overlaps
        - Validate all cells are covered by cages

    - reset_grid():
        - Reset grid to all zeros

    - from_json(filepath):
        - Load puzzle data from JSON file
        - Create Cage objects from cage data
        - Return Puzzle instance

    - from_dict(data):
        - Create Puzzle instance from dictionary data

    - get_cage(row, col):
        - Return cage containing given cell

    - get_cell_value(row, col):
        - Return value at cell

    - set_cell_value(row, col, value):
        - Set value at cell with bounds checking

    - get_cage_values(cage):
        - Return list of current values in cage cells

    - is_cell_empty(row, col):
        - Return True if cell value is zero

    - find_empty_cell():
        - Return coordinates of first empty cell (row-major order)

    - get_grid_copy():
        - Return deep copy of grid

    - display():
        - Print grid to console with formatting

    - display_with_cages():
        - Print grid and cage information to console
